###############################################################################
#
# IAR ANSI C/C++ Compiler V8.30.2.160/W32 for ARM         14/Oct/2018  14:43:37
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Embedded\Firmware\git_Razor_Atmel\firmware_ascii\bsp\eief1-pcb-01.c
#    Command line =  
#        -f C:\Users\BUDWA_~1\AppData\Local\Temp\EWDDE0.tmp
#        (C:\Embedded\Firmware\git_Razor_Atmel\firmware_ascii\bsp\eief1-pcb-01.c
#        -D EIE1 --preprocess=c
#        C:\Embedded\Firmware\git_Razor_Atmel\firmware_ascii\iar_7_20_1\Debug\List
#        -lC
#        C:\Embedded\Firmware\git_Razor_Atmel\firmware_ascii\iar_7_20_1\Debug\List
#        -o
#        C:\Embedded\Firmware\git_Razor_Atmel\firmware_ascii\iar_7_20_1\Debug\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.1\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Embedded\Firmware\git_Razor_Atmel\firmware_ascii\iar_7_20_1\ -I
#        C:\Embedded\Firmware\git_Razor_Atmel\firmware_ascii\iar_7_20_1\..\bsp\
#        -I
#        C:\Embedded\Firmware\git_Razor_Atmel\firmware_ascii\iar_7_20_1\..\drivers\
#        -I
#        C:\Embedded\Firmware\git_Razor_Atmel\firmware_ascii\iar_7_20_1\..\application\
#        -I
#        C:\Embedded\Firmware\git_Razor_Atmel\firmware_ascii\iar_7_20_1\..\..\firmware_common\
#        -I
#        C:\Embedded\Firmware\git_Razor_Atmel\firmware_ascii\iar_7_20_1\..\..\firmware_common\application\
#        -I
#        C:\Embedded\Firmware\git_Razor_Atmel\firmware_ascii\iar_7_20_1\..\..\firmware_common\cmsis\
#        -I
#        C:\Embedded\Firmware\git_Razor_Atmel\firmware_ascii\iar_7_20_1\..\..\firmware_common\drivers\
#        -On --use_c++_inline --require_prototypes -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.1\arm\CMSIS\Core\Include\" -I
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.1\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  
#        C:\Embedded\Firmware\git_Razor_Atmel\firmware_ascii\iar_7_20_1\Debug\List\eief1-pcb-01.lst
#    Object file  =  
#        C:\Embedded\Firmware\git_Razor_Atmel\firmware_ascii\iar_7_20_1\Debug\Obj\eief1-pcb-01.o
#
###############################################################################

C:\Embedded\Firmware\git_Razor_Atmel\firmware_ascii\bsp\eief1-pcb-01.c
      1          /***********************************************************************************************************************
      2          File: eief1-pcb-01.c                                                                
      3          
      4          Description:
      5          This file provides core and GPIO functions for the eief1-pcb-01 board.
      6          ***********************************************************************************************************************/
      7          
      8          #include "configuration.h"
      9          
     10          /***********************************************************************************************************************
     11          Global variable definitions with scope across entire project.
     12          All Global variable names shall start with "G_"
     13          ***********************************************************************************************************************/
     14          /* New variables */

   \                                 In section .bss, align 4
     15          volatile u32 G_u32SystemTime1ms;                       /* Global system time incremented every ms, max 2^32 (~49 days) */
   \                     G_u32SystemTime1ms:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
     16          volatile u32 G_u32SystemTime1s;                        /* Global system time incremented every second, max 2^32 (~136 years) */
   \                     G_u32SystemTime1s:
   \        0x0                      DS8 4
     17          
     18          
     19          /*--------------------------------------------------------------------------------------------------------------------*/
     20          /* Existing variables (defined in other files -- should all contain the "extern" keyword) */
     21          extern volatile u32 G_u32SystemFlags;                  /* From main.c */
     22          extern volatile u32 G_u32ApplicationFlags;             /* From main.c */
     23          
     24          extern u32 G_u32DebugFlags;                            /* From debug.c */
     25          
     26          
     27          /***********************************************************************************************************************
     28          Global variable definitions with scope limited to this local application.
     29          Variable names shall start with "Bsp_" and be declared as static.
     30          ***********************************************************************************************************************/

   \                                 In section .bss, align 4
     31          static u32 Bsp_u32TimingViolationsCounter = 0;
   \                     Bsp_u32TimingViolationsCounter:
   \        0x0                      DS8 4
     32          
     33          
     34          /***********************************************************************************************************************
     35          Function Definitions
     36          ***********************************************************************************************************************/
     37          
     38          /*--------------------------------------------------------------------------------------------------------------------*/
     39          /* Public Functions */
     40          /*--------------------------------------------------------------------------------------------------------------------*/
     41          
     42          
     43          /*--------------------------------------------------------------------------------------------------------------------*/
     44          /* Protected Functions */
     45          /*--------------------------------------------------------------------------------------------------------------------*/
     46          
     47          /*----------------------------------------------------------------------------------------------------------------------
     48          Function: ClockSetup
     49          
     50          Description:
     51          Loads all registers required to set up the processor clocks.
     52          
     53          Requires:
     54            - Built-in 32kHz slow clock is active to time out the fast clock startup time
     55          
     56          Promises:
     57            - EFC is set up with proper flash access wait states based on 48MHz system clock
     58            - PMC is set up with proper oscillators and clock sources
     59          */

   \                                 In section .text, align 2, keep-with-next
     60          void ClockSetup(void)
     61          {
     62            /* Activate the peripheral clocks needed for the system */
     63            AT91C_BASE_PMC->PMC_PCER = PMC_PCER_INIT;
   \                     ClockSetup: (+1)
   \        0x0   0x....             LDR.N    R0,??DataTable8  ;; 0x27fced73
   \        0x2   0x....             LDR.N    R1,??DataTable8_1  ;; 0x400e0410
   \        0x4   0x6008             STR      R0,[R1, #+0]
     64          
     65            /* Enable the master clock on the PKC0 clock out pin (PA_27_CLOCK_OUT) */
     66            AT91C_BASE_PMC->PMC_PCKR[0] = AT91C_PMC_CSS_SYS_CLK | AT91C_PMC_PRES_CLK;
   \        0x6   0x2004             MOVS     R0,#+4
   \        0x8   0x....             LDR.N    R1,??DataTable8_2  ;; 0x400e0440
   \        0xA   0x6008             STR      R0,[R1, #+0]
     67            AT91C_BASE_PMC->PMC_SCER = AT91C_PMC_PCK0;
   \        0xC   0xF44F 0x7080      MOV      R0,#+256
   \       0x10   0x....             LDR.N    R1,??DataTable8_3  ;; 0x400e0400
   \       0x12   0x6008             STR      R0,[R1, #+0]
     68          
     69            /* Turn on the main oscillator and wait for it to start up */
     70            AT91C_BASE_PMC->PMC_MOR = PMC_MOR_INIT;
   \       0x14   0x....             LDR.N    R2,??DataTable8_4  ;; 0x400e0420
   \       0x16   0x....             LDR.N    R0,??DataTable8_5  ;; 0x37f019
   \       0x18   0x6010             STR      R0,[R2, #+0]
     71            while ( !(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_MOSCXTS) );
   \                     ??ClockSetup_0: (+1)
   \       0x1A   0x....             LDR.N    R1,??DataTable8_6  ;; 0x400e0468
   \       0x1C   0x6808             LDR      R0,[R1, #+0]
   \       0x1E   0x07C0             LSLS     R0,R0,#+31
   \       0x20   0xD5FB             BPL.N    ??ClockSetup_0
     72          
     73            /* Assign main clock as crystal */
     74            AT91C_BASE_PMC->PMC_MOR |= (AT91C_CKGR_MOSCSEL | MOR_KEY);
   \       0x22   0x6813             LDR      R3,[R2, #+0]
   \       0x24   0x....             LDR.N    R0,??DataTable8_7  ;; 0x1370000
   \       0x26   0x4303             ORRS     R3,R0,R3
   \       0x28   0x6013             STR      R3,[R2, #+0]
     75            
     76            /* Initialize PLLA and wait for lock */
     77            AT91C_BASE_PMC->PMC_PLLAR = PMC_PLAAR_INIT;
   \       0x2A   0x....             LDR.N    R0,??DataTable8_8  ;; 0x20073f01
   \       0x2C   0x....             LDR.N    R2,??DataTable8_9  ;; 0x400e0428
   \       0x2E   0x6010             STR      R0,[R2, #+0]
     78            while ( !(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_LOCKA) );
   \                     ??ClockSetup_1: (+1)
   \       0x30   0x6808             LDR      R0,[R1, #+0]
   \       0x32   0x0780             LSLS     R0,R0,#+30
   \       0x34   0xD5FC             BPL.N    ??ClockSetup_1
     79            
     80            /* Set flash wait states to allow 48 MHz system clock (2 wait states required) */
     81            AT91C_BASE_EFC0->EFC_FMR = AT91C_EFC_FWS_2WS;
   \       0x36   0xF44F 0x7000      MOV      R0,#+512
   \       0x3A   0x....             LDR.N    R2,??DataTable8_10  ;; 0x400e0800
   \       0x3C   0x6010             STR      R0,[R2, #+0]
     82          //  AT91C_BASE_EFC1->EFC_FMR = AT91C_EFC_FWS_2WS;
     83          
     84            /* Assign the PLLA as the main system clock with prescaler active using the sequence suggested on pg. 472 */
     85            AT91C_BASE_PMC->PMC_MCKR = PMC_MCKR_INIT;
   \       0x3E   0x....             LDR.N    R0,??DataTable8_11  ;; 0x400e0430
   \       0x40   0xF242 0x0211      MOVW     R2,#+8209
   \       0x44   0x6002             STR      R2,[R0, #+0]
     86            while ( !(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_MCKRDY) );
   \                     ??ClockSetup_2: (+1)
   \       0x46   0x680A             LDR      R2,[R1, #+0]
   \       0x48   0x0712             LSLS     R2,R2,#+28
   \       0x4A   0xD5FC             BPL.N    ??ClockSetup_2
     87            AT91C_BASE_PMC->PMC_MCKR = PMC_MCKR_PLLA;
   \       0x4C   0xF242 0x0212      MOVW     R2,#+8210
   \       0x50   0x6002             STR      R2,[R0, #+0]
     88            while ( !(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_MCKRDY) );
   \                     ??ClockSetup_3: (+1)
   \       0x52   0x6808             LDR      R0,[R1, #+0]
   \       0x54   0x0700             LSLS     R0,R0,#+28
   \       0x56   0xD5FC             BPL.N    ??ClockSetup_3
     89          
     90            /* Initialize UTMI for USB usage */
     91            AT91C_BASE_CKGR->CKGR_UCKR |= (AT91C_CKGR_UPLLCOUNT & (3 << 20)) | AT91C_CKGR_UPLLEN;
   \       0x58   0x....             LDR.N    R0,??DataTable8_12  ;; 0x400e041c
   \       0x5A   0x6802             LDR      R2,[R0, #+0]
   \       0x5C   0xF452 0x1244      ORRS     R2,R2,#0x310000
   \       0x60   0x6002             STR      R2,[R0, #+0]
     92            while ( !(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_LOCKU) );
   \                     ??ClockSetup_4: (+1)
   \       0x62   0x6808             LDR      R0,[R1, #+0]
   \       0x64   0x0640             LSLS     R0,R0,#+25
   \       0x66   0xD5FC             BPL.N    ??ClockSetup_4
     93            
     94          } /* end ClockSetup */
   \       0x68   0x4770             BX       LR               ;; return
     95          
     96          
     97          /*----------------------------------------------------------------------------------------------------------------------
     98          Function: RealTimeClockSetup
     99          
    100          Description:
    101          Loads all registers required to set up the real time clock.
    102          
    103          Requires:
    104          
    105          Promises:
    106          */

   \                                 In section .text, align 2, keep-with-next
    107          void RealTimeClockSetup(void)
    108          {
    109          } /* end RealTimeClockSetup() */
   \                     RealTimeClockSetup: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    110          
    111          
    112          /*----------------------------------------------------------------------------------------------------------------------
    113          Function: SysTickSetup
    114          
    115          Description:
    116          Initializes the 1ms and 1s System Ticks off the core timer.
    117          
    118          Requires:
    119            - NVIC is setup and SysTick handler is installed
    120          
    121          Promises:
    122            - Both system timers are set and the SysTick core peripheral is configured for 1ms intervals
    123          */

   \                                 In section .text, align 2, keep-with-next
    124          void SysTickSetup(void)
    125          {
    126            G_u32SystemTime1ms = 0;      
   \                     SysTickSetup: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x....             LDR.N    R1,??DataTable8_13
   \        0x4   0x6008             STR      R0,[R1, #+0]
    127            G_u32SystemTime1s  = 0;   
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x....             LDR.N    R1,??DataTable8_14
   \        0xA   0x6008             STR      R0,[R1, #+0]
    128            
    129            /* Load the SysTick Counter Value */
    130            AT91C_BASE_NVIC->NVIC_STICKRVR   = (u32)SYSTICK_COUNT - 1; /* Check value */
   \        0xC   0xF241 0x706F      MOVW     R0,#+5999
   \       0x10   0x....             LDR.N    R1,??DataTable8_15  ;; 0xe000e014
   \       0x12   0x6008             STR      R0,[R1, #+0]
    131            AT91C_BASE_NVIC->NVIC_STICKCVR   = (0x00);                                                              
   \       0x14   0x2000             MOVS     R0,#+0
   \       0x16   0x....             LDR.N    R1,??DataTable8_16  ;; 0xe000e018
   \       0x18   0x6008             STR      R0,[R1, #+0]
    132            AT91C_BASE_NVIC->NVIC_STICKCSR   = SYSTICK_CTRL_INIT;
   \       0x1A   0x2003             MOVS     R0,#+3
   \       0x1C   0x....             LDR.N    R1,??DataTable8_17  ;; 0xe000e010
   \       0x1E   0x6008             STR      R0,[R1, #+0]
    133           
    134          } /* end SysTickSetup() */
   \       0x20   0x4770             BX       LR               ;; return
    135          
    136          
    137          /*----------------------------------------------------------------------------------------------------------------------
    138          Function: SystemSleep
    139          
    140          Description:
    141          Puts the system into sleep mode.  Deep sleep mode is currently disabled, so
    142          maximum processor power savings are not yet realized.  To enable deep sleep,
    143          there are certain considerations for waking up that must be taken care of.
    144          
    145          Requires:
    146            - SysTick is running with interrupt enabled for wake from Sleep LPM
    147            - RTC 1 second alarm running with interrupt for wake from Stop LPM
    148          
    149          Promises:
    150            - Configures processor for maximum sleep while still allowing any required
    151              interrupt to wake it up.
    152          */

   \                                 In section .text, align 2, keep-with-next
    153          void SystemSleep(void)
    154          {    
   \                     SystemSleep: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
    155             static u32 u32PreviousSystemTick = 0;
    156             static u8 au8TickWarningMessage[] = "\n\r*** 1ms timing violation: ";   
    157             
    158            /* Check system timing */
    159            if( (G_u32SystemTime1ms - u32PreviousSystemTick) != 1)
   \        0x2   0x....             LDR.N    R4,??DataTable8_18
   \        0x4   0x....             LDR.N    R5,??DataTable8_13
   \        0x6   0x6829             LDR      R1,[R5, #+0]
   \        0x8   0x6820             LDR      R0,[R4, #+0]
   \        0xA   0x1A09             SUBS     R1,R1,R0
   \        0xC   0x2901             CMP      R1,#+1
   \        0xE   0xD014             BEQ.N    ??SystemSleep_0
    160            {
    161              /* Flag, count and optionally display warning */
    162              Bsp_u32TimingViolationsCounter++;
   \       0x10   0x....             LDR.N    R6,??DataTable8_19
   \       0x12   0x6830             LDR      R0,[R6, #+0]
   \       0x14   0x1C40             ADDS     R0,R0,#+1
   \       0x16   0x6030             STR      R0,[R6, #+0]
    163              G_u32SystemFlags |= _SYSTEM_TIME_WARNING;
   \       0x18   0x....             LDR.N    R0,??DataTable8_20
   \       0x1A   0x6801             LDR      R1,[R0, #+0]
   \       0x1C   0xF051 0x0120      ORRS     R1,R1,#0x20
   \       0x20   0x6001             STR      R1,[R0, #+0]
    164              if(G_u32DebugFlags & _DEBUG_TIME_WARNING_ENABLE)
   \       0x22   0x....             LDR.N    R0,??DataTable8_21
   \       0x24   0x7800             LDRB     R0,[R0, #+0]
   \       0x26   0x0780             LSLS     R0,R0,#+30
   \       0x28   0xD507             BPL.N    ??SystemSleep_0
    165              {
    166                DebugPrintf(au8TickWarningMessage);
   \       0x2A   0x....             LDR.N    R0,??DataTable8_22
   \       0x2C   0x.... 0x....      BL       DebugPrintf
    167                DebugPrintNumber(Bsp_u32TimingViolationsCounter);
   \       0x30   0x6830             LDR      R0,[R6, #+0]
   \       0x32   0x.... 0x....      BL       DebugPrintNumber
    168                DebugLineFeed();
   \       0x36   0x.... 0x....      BL       DebugLineFeed
    169              }
    170            }
    171            
    172            u32PreviousSystemTick = G_u32SystemTime1ms;
   \                     ??SystemSleep_0: (+1)
   \       0x3A   0x6828             LDR      R0,[R5, #+0]
   \       0x3C   0x6020             STR      R0,[R4, #+0]
    173             
    174            /* Set the system control register for Sleep (but not Deep Sleep) */
    175             AT91C_BASE_PMC->PMC_FSMR &= ~AT91C_PMC_LPM;
   \       0x3E   0x....             LDR.N    R0,??DataTable8_23  ;; 0x400e0470
   \       0x40   0x6801             LDR      R1,[R0, #+0]
   \       0x42   0xF431 0x1180      BICS     R1,R1,#0x100000
   \       0x46   0x6001             STR      R1,[R0, #+0]
    176             AT91C_BASE_NVIC->NVIC_SCR &= ~AT91C_NVIC_SLEEPDEEP;
   \       0x48   0x....             LDR.N    R0,??DataTable8_24  ;; 0xe000ed10
   \       0x4A   0x6801             LDR      R1,[R0, #+0]
   \       0x4C   0xF031 0x0104      BICS     R1,R1,#0x4
   \       0x50   0x6001             STR      R1,[R0, #+0]
    177             
    178             /* Set the sleep flag (cleared only in SysTick ISR */
    179             G_u32SystemFlags |= _SYSTEM_SLEEPING;
   \       0x52   0x....             LDR.N    R0,??DataTable8_20
   \       0x54   0x6801             LDR      R1,[R0, #+0]
   \       0x56   0xF051 0x4180      ORRS     R1,R1,#0x40000000
   \       0x5A   0x6001             STR      R1,[R0, #+0]
    180          
    181            /* Now enter the selected LPM */
    182             while(G_u32SystemFlags & _SYSTEM_SLEEPING)
   \                     ??SystemSleep_1: (+1)
   \       0x5C   0x6801             LDR      R1,[R0, #+0]
   \       0x5E   0x0049             LSLS     R1,R1,#+1
   \       0x60   0xD501             BPL.N    ??SystemSleep_2
    183             {
    184               __WFI();
   \       0x62   0xBF30             WFI      
   \       0x64   0xE7FA             B.N      ??SystemSleep_1
    185             }
    186            
    187          } /* end SystemSleep(void) */
   \                     ??SystemSleep_2: (+1)
   \       0x66   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .bss, align 4
   \                     `SystemSleep::u32PreviousSystemTick`:
   \        0x0                      DS8 4

   \                                 In section .data, align 4
   \                     `SystemSleep::au8TickWarningMessage`:
   \        0x0   0x0A 0x0D          DC8 "\012\015*** 1ms timing violation: "
   \              0x2A 0x2A    
   \              0x2A 0x20    
   \              0x31 0x6D    
   \              0x73 0x20    
   \              0x74 0x69    
   \              0x6D 0x69    
   \              0x6E 0x67    
   \              0x20 0x76    
   \              0x69 0x6F    
   \              0x6C 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x3A 0x20    
   \              0x00         
   \       0x1D   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    188          
    189          
    190          /*----------------------------------------------------------------------------------------------------------------------
    191          Function: WatchDogSetup
    192          
    193          Description:
    194          Configures the watchdog timer.  The dog runs at 32.768kHz from the slow built-in RC clock source which varies over operating conditions from 30kHz to 60kHz.
    195          Since the main loop time / sleep time should be 1 ms most of the time, choosing a value
    196          of 5 seconds should be plenty to avoid watchdog resets.  
    197          
    198          Note: the processor allows the MR register to be written just once.
    199          
    200          Requires:
    201            - SCLK is active at about 32.768kHz
    202          
    203          Promises:
    204            - Watchdog is set for 5 second timeout but not yet enabled
    205          */

   \                                 In section .text, align 2, keep-with-next
    206          void WatchDogSetup(void)
    207          {
    208            AT91C_BASE_WDTC->WDTC_WDMR = WDT_MR_INIT;
   \                     WatchDogSetup: (+1)
   \        0x0   0x....             LDR.N    R0,??DataTable8_25  ;; 0x1fff0500
   \        0x2   0x....             LDR.N    R1,??DataTable8_26  ;; 0x400e1254
   \        0x4   0x6008             STR      R0,[R1, #+0]
    209            WATCHDOG_BONE();
   \        0x6   0x....             LDR.N    R0,??DataTable8_27  ;; 0xa5000001
   \        0x8   0x....             LDR.N    R1,??DataTable8_28  ;; 0x400e1250
   \        0xA   0x6008             STR      R0,[R1, #+0]
    210           
    211          } /* end WatchDogSetup() */
   \        0xC   0x4770             BX       LR               ;; return
    212          
    213          
    214          /*----------------------------------------------------------------------------------------------------------------------
    215          Function: GpioSetup
    216          
    217          Description
    218          Loads all registers required to set up GPIO on the processor.
    219          
    220          Requires:
    221            - All configurations must match connected hardware.
    222          
    223          Promises:
    224            - All I/O lines are set for their required function and start-state
    225          */

   \                                 In section .text, align 2, keep-with-next
    226          void GpioSetup(void)
    227          {
   \                     GpioSetup: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    228            /* Set all of the pin function registers in port A */
    229            AT91C_BASE_PIOA->PIO_PER    = PIOA_PER_INIT;
   \        0x2   0x....             LDR.N    R0,??DataTable8_29  ;; 0x84030007
   \        0x4   0x....             LDR.N    R1,??DataTable8_30  ;; 0x400e0c00
   \        0x6   0x6008             STR      R0,[R1, #+0]
    230            AT91C_BASE_PIOA->PIO_PDR    = PIOA_PDR_INIT;
   \        0x8   0x....             LDR.N    R0,??DataTable8_31  ;; 0x7bfcfff8
   \        0xA   0x....             LDR.N    R1,??DataTable8_32  ;; 0x400e0c04
   \        0xC   0x6008             STR      R0,[R1, #+0]
    231            AT91C_BASE_PIOA->PIO_OER    = PIOA_OER_INIT;
   \        0xE   0x....             LDR.N    R0,??DataTable8_33  ;; 0xbf55d7f9
   \       0x10   0x....             LDR.N    R1,??DataTable8_34  ;; 0x400e0c10
   \       0x12   0x6008             STR      R0,[R1, #+0]
    232            AT91C_BASE_PIOA->PIO_ODR    = PIOA_ODR_INIT;
   \       0x14   0x....             LDR.N    R0,??DataTable8_35  ;; 0x40aa2806
   \       0x16   0x....             LDR.N    R1,??DataTable8_36  ;; 0x400e0c14
   \       0x18   0x6008             STR      R0,[R1, #+0]
    233            AT91C_BASE_PIOA->PIO_IFER   = PIOA_IFER_INIT;
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0x....             LDR.N    R1,??DataTable8_37  ;; 0x400e0c20
   \       0x1E   0x6008             STR      R0,[R1, #+0]
    234            AT91C_BASE_PIOA->PIO_IFDR   = PIOA_IFDR_INIT;
   \       0x20   0x2000             MOVS     R0,#+0
   \       0x22   0x....             LDR.N    R1,??DataTable8_38  ;; 0x400e0c24
   \       0x24   0x6008             STR      R0,[R1, #+0]
    235            AT91C_BASE_PIOA->PIO_SODR   = PIOA_SODR_INIT;
   \       0x26   0x....             LDR.N    R0,??DataTable8_39  ;; 0x88010000
   \       0x28   0x....             LDR.N    R1,??DataTable8_40  ;; 0x400e0c30
   \       0x2A   0x6008             STR      R0,[R1, #+0]
    236            AT91C_BASE_PIOA->PIO_CODR   = PIOA_CODR_INIT;
   \       0x2C   0xF05F 0x5040      MOVS     R0,#+805306368
   \       0x30   0x....             LDR.N    R1,??DataTable8_41  ;; 0x400e0c34
   \       0x32   0x6008             STR      R0,[R1, #+0]
    237            AT91C_BASE_PIOA->PIO_MDER   = PIOA_MDER_INIT;
   \       0x34   0x....             LDR.N    R0,??DataTable8_42  ;; 0x4000600
   \       0x36   0x....             LDR.N    R1,??DataTable8_43  ;; 0x400e0c50
   \       0x38   0x6008             STR      R0,[R1, #+0]
    238            AT91C_BASE_PIOA->PIO_MDDR   = PIOA_MDDR_INIT;
   \       0x3A   0x....             LDR.N    R0,??DataTable8_44  ;; 0xfbfff9ff
   \       0x3C   0x....             LDR.N    R1,??DataTable8_45  ;; 0x400e0c54
   \       0x3E   0x6008             STR      R0,[R1, #+0]
    239            AT91C_BASE_PIOA->PIO_PPUDR  = PIOA_PPUDR_INIT;
   \       0x40   0xF07F 0x0001      MVNS     R0,#+1
   \       0x44   0x....             LDR.N    R1,??DataTable8_46  ;; 0x400e0c60
   \       0x46   0x6008             STR      R0,[R1, #+0]
    240            AT91C_BASE_PIOA->PIO_PPUER  = PIOA_PPUER_INIT;
   \       0x48   0x2001             MOVS     R0,#+1
   \       0x4A   0x....             LDR.N    R1,??DataTable8_47  ;; 0x400e0c64
   \       0x4C   0x6008             STR      R0,[R1, #+0]
    241            AT91C_BASE_PIOA->PIO_ABSR   = PIOA_ABSR_INIT;
   \       0x4E   0xF05F 0x40F6      MOVS     R0,#+2063597568
   \       0x52   0x....             LDR.N    R1,??DataTable8_48  ;; 0x400e0c70
   \       0x54   0x6008             STR      R0,[R1, #+0]
    242            AT91C_BASE_PIOA->PIO_SCIFSR = PIOA_SCIFSR_INIT;
   \       0x56   0x2000             MOVS     R0,#+0
   \       0x58   0x....             LDR.N    R1,??DataTable8_49  ;; 0x400e0c80
   \       0x5A   0x6008             STR      R0,[R1, #+0]
    243            AT91C_BASE_PIOA->PIO_DIFSR  = PIOA_DIFSR_INIT;
   \       0x5C   0x2000             MOVS     R0,#+0
   \       0x5E   0x....             LDR.N    R1,??DataTable8_50  ;; 0x400e0c84
   \       0x60   0x6008             STR      R0,[R1, #+0]
    244            AT91C_BASE_PIOA->PIO_SCDR   = PIOA_SCDR_INIT;
   \       0x62   0x2000             MOVS     R0,#+0
   \       0x64   0x....             LDR.N    R1,??DataTable8_51  ;; 0x400e0c8c
   \       0x66   0x6008             STR      R0,[R1, #+0]
    245            AT91C_BASE_PIOA->PIO_OWER   = PIOA_OWER_INIT;
   \       0x68   0x....             LDR.N    R0,??DataTable8_52  ;; 0xb4010000
   \       0x6A   0x....             LDR.N    R1,??DataTable8_53  ;; 0x400e0ca0
   \       0x6C   0x6008             STR      R0,[R1, #+0]
    246            AT91C_BASE_PIOA->PIO_OWDR   = PIOA_OWDR_INIT;
   \       0x6E   0x2000             MOVS     R0,#+0
   \       0x70   0x....             LDR.N    R1,??DataTable8_54  ;; 0x400e0ca4
   \       0x72   0x6008             STR      R0,[R1, #+0]
    247            
    248            /* Configure port B GPIO */
    249            AT91C_BASE_PIOB->PIO_PER    = PIOB_PER_INIT;
   \       0x74   0x....             LDR.N    R0,??DataTable8_55  ;; 0x1bfff57
   \       0x76   0x....             LDR.N    R1,??DataTable8_56  ;; 0x400e0e00
   \       0x78   0x6008             STR      R0,[R1, #+0]
    250            AT91C_BASE_PIOB->PIO_PDR    = PIOB_PDR_INIT;
   \       0x7A   0x....             LDR.N    R0,??DataTable8_57  ;; 0x400058
   \       0x7C   0x....             LDR.N    R1,??DataTable8_58  ;; 0x400e0e04
   \       0x7E   0x6008             STR      R0,[R1, #+0]
    251            AT91C_BASE_PIOB->PIO_OER    = PIOB_OER_INIT;
   \       0x80   0x....             LDR.N    R0,??DataTable8_59  ;; 0x1bfffe0
   \       0x82   0x....             LDR.N    R1,??DataTable8_60  ;; 0x400e0e10
   \       0x84   0x6008             STR      R0,[R1, #+0]
    252            AT91C_BASE_PIOB->PIO_ODR    = PIOB_ODR_INIT;
   \       0x86   0x....             LDR.N    R0,??DataTable8_61  ;; 0x40001f
   \       0x88   0x....             LDR.N    R1,??DataTable8_62  ;; 0x400e0e14
   \       0x8A   0x6008             STR      R0,[R1, #+0]
    253            AT91C_BASE_PIOB->PIO_IFER   = PIOB_IFER_INIT;
   \       0x8C   0x2000             MOVS     R0,#+0
   \       0x8E   0x....             LDR.N    R1,??DataTable8_63  ;; 0x400e0e20
   \       0x90   0x6008             STR      R0,[R1, #+0]
    254            AT91C_BASE_PIOB->PIO_IFDR   = PIOB_IFDR_INIT;
   \       0x92   0x2000             MOVS     R0,#+0
   \       0x94   0x....             LDR.N    R1,??DataTable8_64  ;; 0x400e0e24
   \       0x96   0x6008             STR      R0,[R1, #+0]
    255            AT91C_BASE_PIOB->PIO_SODR   = PIOB_SODR_INIT;
   \       0x98   0x....             LDR.N    R0,??DataTable8_65  ;; 0x1bffe00
   \       0x9A   0x....             LDR.N    R1,??DataTable8_66  ;; 0x400e0e30
   \       0x9C   0x6008             STR      R0,[R1, #+0]
    256            AT91C_BASE_PIOB->PIO_CODR   = PIOB_CODR_INIT;
   \       0x9E   0x2000             MOVS     R0,#+0
   \       0xA0   0x....             LDR.N    R1,??DataTable8_67  ;; 0x400e0e34
   \       0xA2   0x6008             STR      R0,[R1, #+0]
    257            AT91C_BASE_PIOB->PIO_MDER   = PIOB_MDER_INIT;
   \       0xA4   0x2000             MOVS     R0,#+0
   \       0xA6   0x....             LDR.N    R1,??DataTable8_68  ;; 0x400e0e50
   \       0xA8   0x6008             STR      R0,[R1, #+0]
    258            AT91C_BASE_PIOB->PIO_MDDR   = PIOB_MDDR_INIT;
   \       0xAA   0xF07F 0x407E      MVNS     R0,#-33554432
   \       0xAE   0x....             LDR.N    R1,??DataTable8_69  ;; 0x400e0e54
   \       0xB0   0x6008             STR      R0,[R1, #+0]
    259            AT91C_BASE_PIOB->PIO_PPUDR  = PIOB_PPUDR_INIT;
   \       0xB2   0x....             LDR.N    R0,??DataTable8_70  ;; 0x1fffe5f
   \       0xB4   0x....             LDR.N    R1,??DataTable8_71  ;; 0x400e0e60
   \       0xB6   0x6008             STR      R0,[R1, #+0]
    260            AT91C_BASE_PIOB->PIO_PPUER  = PIOB_PPUER_INIT;
   \       0xB8   0xF44F 0x70E0      MOV      R0,#+448
   \       0xBC   0x....             LDR.N    R1,??DataTable8_72  ;; 0x400e0e64
   \       0xBE   0x6008             STR      R0,[R1, #+0]
    261            AT91C_BASE_PIOB->PIO_ABSR   = PIOB_ABSR_INIT;
   \       0xC0   0x....             LDR.N    R0,??DataTable8_73  ;; 0x400018
   \       0xC2   0x....             LDR.N    R1,??DataTable8_74  ;; 0x400e0e70
   \       0xC4   0x6008             STR      R0,[R1, #+0]
    262            AT91C_BASE_PIOB->PIO_SCIFSR = PIOB_SCIFSR_INIT;
   \       0xC6   0x2000             MOVS     R0,#+0
   \       0xC8   0x....             LDR.N    R1,??DataTable8_75  ;; 0x400e0e80
   \       0xCA   0x6008             STR      R0,[R1, #+0]
    263            AT91C_BASE_PIOB->PIO_DIFSR  = PIOB_DIFSR_INIT;
   \       0xCC   0x2000             MOVS     R0,#+0
   \       0xCE   0x....             LDR.N    R1,??DataTable8_76  ;; 0x400e0e84
   \       0xD0   0x6008             STR      R0,[R1, #+0]
    264            AT91C_BASE_PIOB->PIO_SCDR   = PIOB_SCDR_INIT;
   \       0xD2   0x2000             MOVS     R0,#+0
   \       0xD4   0x....             LDR.N    R1,??DataTable8_77  ;; 0x400e0e8c
   \       0xD6   0x6008             STR      R0,[R1, #+0]
    265            AT91C_BASE_PIOB->PIO_OWER   = PIOB_OWER_INIT;
   \       0xD8   0x....             LDR.N    R0,??DataTable8_78  ;; 0x1fffe0
   \       0xDA   0x....             LDR.N    R1,??DataTable8_79  ;; 0x400e0ea0
   \       0xDC   0x6008             STR      R0,[R1, #+0]
    266            AT91C_BASE_PIOB->PIO_OWDR   = PIOB_OWDR_INIT;
   \       0xDE   0x2000             MOVS     R0,#+0
   \       0xE0   0x....             LDR.N    R1,??DataTable8_80  ;; 0x400e0ea4
   \       0xE2   0x6008             STR      R0,[R1, #+0]
    267            
    268            PWMSetupAudio();
   \       0xE4   0x.... 0x....      BL       PWMSetupAudio
    269            
    270          } /* end GpioSetup() */
   \       0xE8   0xBD01             POP      {R0,PC}          ;; return
    271          
    272          
    273          /*----------------------------------------------------------------------------
    274          Function: PWMSetupAudio
    275          
    276          Description:
    277          Configures the PWM peripheral for audio operation on H0 and H1 channels.
    278          
    279          Requires:
    280            - Peripheral resources not used for any other function.
    281          
    282          Promises:
    283            - PWM is configured for PWM mode and currently off.
    284          */

   \                                 In section .text, align 2, keep-with-next
    285          void PWMSetupAudio(void)
    286          {
    287            /* Set all intialization values */
    288            AT91C_BASE_PWMC->PWMC_CLK = PWM_CLK_INIT;
   \                     PWMSetupAudio: (+1)
   \        0x0   0xF05F 0x1001      MOVS     R0,#+65537
   \        0x4   0x....             LDR.N    R1,??DataTable8_81  ;; 0x4008c000
   \        0x6   0x6008             STR      R0,[R1, #+0]
    289            AT91C_BASE_PWMC->PWMC_SCM = PWM_SCM_INIT;
   \        0x8   0x2000             MOVS     R0,#+0
   \        0xA   0x....             LDR.N    R1,??DataTable8_82  ;; 0x4008c020
   \        0xC   0x6008             STR      R0,[R1, #+0]
    290            
    291            AT91C_BASE_PWMC_CH0->PWMC_CMR = PWM_CMR0_INIT;
   \        0xE   0x2003             MOVS     R0,#+3
   \       0x10   0x....             LDR.N    R1,??DataTable8_83  ;; 0x4008c200
   \       0x12   0x6008             STR      R0,[R1, #+0]
    292            AT91C_BASE_PWMC_CH0->PWMC_CPRDR    = PWM_CPRD0_INIT; /* Set current frequency */
   \       0x14   0xF241 0x7070      MOVW     R0,#+6000
   \       0x18   0x....             LDR.N    R1,??DataTable8_84  ;; 0x4008c20c
   \       0x1A   0x6008             STR      R0,[R1, #+0]
    293            AT91C_BASE_PWMC_CH0->PWMC_CPRDUPDR = PWM_CPRD0_INIT; /* Latch CPRD values */
   \       0x1C   0x....             LDR.N    R1,??DataTable8_85  ;; 0x4008c210
   \       0x1E   0x6008             STR      R0,[R1, #+0]
    294            AT91C_BASE_PWMC_CH0->PWMC_CDTYR    = PWM_CDTY0_INIT; /* Set 50% duty */
   \       0x20   0xF642 0x60E0      MOVW     R0,#+12000
   \       0x24   0x....             LDR.N    R1,??DataTable8_86  ;; 0x4008c204
   \       0x26   0x6008             STR      R0,[R1, #+0]
    295            AT91C_BASE_PWMC_CH0->PWMC_CDTYUPDR = PWM_CDTY0_INIT; /* Latch CDTY values */
   \       0x28   0x....             LDR.N    R1,??DataTable8_87  ;; 0x4008c208
   \       0x2A   0x6008             STR      R0,[R1, #+0]
    296          
    297            AT91C_BASE_PWMC_CH1->PWMC_CMR = PWM_CMR1_INIT;
   \       0x2C   0x2003             MOVS     R0,#+3
   \       0x2E   0x....             LDR.N    R1,??DataTable8_88  ;; 0x4008c220
   \       0x30   0x6008             STR      R0,[R1, #+0]
    298            AT91C_BASE_PWMC_CH1->PWMC_CPRDR    = PWM_CPRD1_INIT; /* Set current frequency  */
   \       0x32   0xF240 0x50DC      MOVW     R0,#+1500
   \       0x36   0x....             LDR.N    R1,??DataTable8_89  ;; 0x4008c22c
   \       0x38   0x6008             STR      R0,[R1, #+0]
    299            AT91C_BASE_PWMC_CH1->PWMC_CPRDUPDR = PWM_CPRD1_INIT; /* Latch CPRD values */
   \       0x3A   0x....             LDR.N    R1,??DataTable8_90  ;; 0x4008c230
   \       0x3C   0x6008             STR      R0,[R1, #+0]
    300            AT91C_BASE_PWMC_CH1->PWMC_CDTYR    = PWM_CDTY1_INIT; /* Set 50% duty */
   \       0x3E   0xF640 0x30B8      MOVW     R0,#+3000
   \       0x42   0x....             LDR.N    R1,??DataTable8_91  ;; 0x4008c224
   \       0x44   0x6008             STR      R0,[R1, #+0]
    301            AT91C_BASE_PWMC_CH1->PWMC_CDTYUPDR = PWM_CDTY1_INIT; /* Latch CDTY values */
   \       0x46   0x....             LDR.N    R1,??DataTable8_92  ;; 0x4008c228
   \       0x48   0x6008             STR      R0,[R1, #+0]
    302          
    303            
    304          } /* end PWMSetupAudio() */
   \       0x4A   0x4770             BX       LR               ;; return
    305          
    306          
    307          /*----------------------------------------------------------------------------
    308          Function: PWMAudioSetFrequency
    309          
    310          Description:
    311          Configures the PWM peripheral with the desired frequency.
    312          
    313          Requires:
    314            - u32Channel_ is the channel of interest - either BUZZER1 or BUZZER2
    315            - u16Frequency_ is in Hertz and should be in the range 100 - 20,000 since
    316              that is the audible range.  Higher and lower frequencies are allowed, though.
    317            - The PWM peripheral is correctly configured for the current processor clock speed.
    318            - CPRE_CLCK is the clock frequency for the PWM peripheral
    319          
    320          Promises:
    321            - The frequency and duty cycle values for the requested channel are calculated
    322              and then latched to their respective update registers (CPRDUPDR, CDTYUPDR)
    323            - If the channel is not valid, nothing happens
    324          */

   \                                 In section .text, align 2, keep-with-next
    325          void PWMAudioSetFrequency(u32 u32Channel_, u16 u16Frequency_)
    326          {
   \                     PWMAudioSetFrequency: (+1)
   \        0x0   0xB410             PUSH     {R4}
    327            u32 u32ChannelPeriod;
    328            
    329            u32ChannelPeriod = CPRE_CLCK / u16Frequency_;
   \        0x2   0x....             LDR.N    R2,??DataTable8_93  ;; 0x5b8d80
   \        0x4   0x000B             MOVS     R3,R1
   \        0x6   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \        0x8   0xFBB2 0xF2F3      UDIV     R2,R2,R3
    330            
    331            if(u32Channel_ == BUZZER1)
   \        0xC   0x2801             CMP      R0,#+1
   \        0xE   0xD111             BNE.N    ??PWMAudioSetFrequency_0
    332            {
    333              /* Set different registers depending on if PWM is already running */
    334              if (AT91C_BASE_PWMC->PWMC_SR & AT91C_PWMC_CHID0)
   \       0x10   0x....             LDR.N    R3,??DataTable8_94  ;; 0x4008c00c
   \       0x12   0x681B             LDR      R3,[R3, #+0]
   \       0x14   0x07DB             LSLS     R3,R3,#+31
   \       0x16   0xD506             BPL.N    ??PWMAudioSetFrequency_1
    335              {
    336                /* Beeper is already running, so use update registers */
    337                AT91C_BASE_PWMC_CH0->PWMC_CPRDUPDR = u32ChannelPeriod;   
   \       0x18   0x....             LDR.N    R3,??DataTable8_85  ;; 0x4008c210
   \       0x1A   0x601A             STR      R2,[R3, #+0]
    338                AT91C_BASE_PWMC_CH0->PWMC_CDTYUPDR = u32ChannelPeriod >> 1; 
   \       0x1C   0x0013             MOVS     R3,R2
   \       0x1E   0x085B             LSRS     R3,R3,#+1
   \       0x20   0x....             LDR.N    R4,??DataTable8_87  ;; 0x4008c208
   \       0x22   0x6023             STR      R3,[R4, #+0]
   \       0x24   0xE019             B.N      ??PWMAudioSetFrequency_2
    339              }
    340              else
    341              {
    342                /* Beeper is off, so use direct registers */
    343                AT91C_BASE_PWMC_CH0->PWMC_CPRDR = u32ChannelPeriod;
   \                     ??PWMAudioSetFrequency_1: (+1)
   \       0x26   0x....             LDR.N    R3,??DataTable8_84  ;; 0x4008c20c
   \       0x28   0x601A             STR      R2,[R3, #+0]
    344                AT91C_BASE_PWMC_CH0->PWMC_CDTYR = u32ChannelPeriod >> 1;
   \       0x2A   0x0013             MOVS     R3,R2
   \       0x2C   0x085B             LSRS     R3,R3,#+1
   \       0x2E   0x....             LDR.N    R4,??DataTable8_86  ;; 0x4008c204
   \       0x30   0x6023             STR      R3,[R4, #+0]
   \       0x32   0xE012             B.N      ??PWMAudioSetFrequency_2
    345              }
    346            }
    347            
    348            else if(u32Channel_ == BUZZER2)
   \                     ??PWMAudioSetFrequency_0: (+1)
   \       0x34   0x2802             CMP      R0,#+2
   \       0x36   0xD110             BNE.N    ??PWMAudioSetFrequency_2
    349            {
    350              /* Set different registers depending on if PWM is already running */
    351              if (AT91C_BASE_PWMC->PWMC_SR & AT91C_PWMC_CHID1)
   \       0x38   0x....             LDR.N    R3,??DataTable8_94  ;; 0x4008c00c
   \       0x3A   0x681B             LDR      R3,[R3, #+0]
   \       0x3C   0x079B             LSLS     R3,R3,#+30
   \       0x3E   0xD506             BPL.N    ??PWMAudioSetFrequency_3
    352              {
    353                /* Beeper is already running, so use update registers */
    354                AT91C_BASE_PWMC_CH1->PWMC_CPRDUPDR = u32ChannelPeriod;   
   \       0x40   0x....             LDR.N    R3,??DataTable8_90  ;; 0x4008c230
   \       0x42   0x601A             STR      R2,[R3, #+0]
    355                AT91C_BASE_PWMC_CH1->PWMC_CDTYUPDR = u32ChannelPeriod >> 1; 
   \       0x44   0x0013             MOVS     R3,R2
   \       0x46   0x085B             LSRS     R3,R3,#+1
   \       0x48   0x....             LDR.N    R4,??DataTable8_92  ;; 0x4008c228
   \       0x4A   0x6023             STR      R3,[R4, #+0]
   \       0x4C   0xE005             B.N      ??PWMAudioSetFrequency_2
    356              }
    357              else
    358              {
    359                /* Beeper is off, so use direct registers */
    360                AT91C_BASE_PWMC_CH1->PWMC_CPRDR = u32ChannelPeriod;
   \                     ??PWMAudioSetFrequency_3: (+1)
   \       0x4E   0x....             LDR.N    R3,??DataTable8_89  ;; 0x4008c22c
   \       0x50   0x601A             STR      R2,[R3, #+0]
    361                AT91C_BASE_PWMC_CH1->PWMC_CDTYR = u32ChannelPeriod >> 1;
   \       0x52   0x0013             MOVS     R3,R2
   \       0x54   0x085B             LSRS     R3,R3,#+1
   \       0x56   0x....             LDR.N    R4,??DataTable8_91  ;; 0x4008c224
   \       0x58   0x6023             STR      R3,[R4, #+0]
    362              }
    363            }
    364            
    365          } /* end PWMAudioSetFrequency() */
   \                     ??PWMAudioSetFrequency_2: (+1)
   \       0x5A   0xBC10             POP      {R4}
   \       0x5C   0x4770             BX       LR               ;; return
    366          
    367          
    368          /*----------------------------------------------------------------------------
    369          Function: PWMAudioOn
    370          
    371          Description:
    372          Enables a PWM channel.
    373          
    374          Requires:
    375            - All peripheral values should be configured
    376            - u32Channel_ is BUZZER1 or BUZZER2
    377          
    378          Promises:
    379            - PWM for the selected channel is enabled
    380          */

   \                                 In section .text, align 2, keep-with-next
    381          void PWMAudioOn(u32 u32Channel_)
    382          {
    383            /* Enable the channel */
    384            AT91C_BASE_PWMC->PWMC_ENA = u32Channel_;  
   \                     PWMAudioOn: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable8_95  ;; 0x4008c004
   \        0x2   0x6008             STR      R0,[R1, #+0]
    385          
    386          } /* end PWMAudioOn() */
   \        0x4   0x4770             BX       LR               ;; return
    387          
    388          
    389          /*----------------------------------------------------------------------------
    390          Function: PWMAudioOff
    391          
    392          Description:
    393          Disables a PWM channel.
    394          
    395          Requires:
    396            - u32Channel_ is BUZZER1 or BUZZER2
    397          
    398          Promises:
    399            - PWM for the selected channel is disabled
    400          */

   \                                 In section .text, align 2, keep-with-next
    401          void PWMAudioOff(u32 u32Channel_)
    402          {
    403            /* Enable the channel */
    404            AT91C_BASE_PWMC->PWMC_DIS = u32Channel_;  
   \                     PWMAudioOff: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable8_96  ;; 0x4008c008
   \        0x2   0x6008             STR      R0,[R1, #+0]
    405          
    406          } /* end PWMAudioOff() */
   \        0x4   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \        0x0   0x27FC'ED73        DC32     0x27fced73

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \        0x0   0x400E'0410        DC32     0x400e0410

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \        0x0   0x400E'0440        DC32     0x400e0440

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \        0x0   0x400E'0400        DC32     0x400e0400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \        0x0   0x400E'0420        DC32     0x400e0420

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \        0x0   0x0037'F019        DC32     0x37f019

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \        0x0   0x400E'0468        DC32     0x400e0468

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_7:
   \        0x0   0x0137'0000        DC32     0x1370000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_8:
   \        0x0   0x2007'3F01        DC32     0x20073f01

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_9:
   \        0x0   0x400E'0428        DC32     0x400e0428

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_10:
   \        0x0   0x400E'0800        DC32     0x400e0800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_11:
   \        0x0   0x400E'0430        DC32     0x400e0430

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_12:
   \        0x0   0x400E'041C        DC32     0x400e041c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_13:
   \        0x0   0x....'....        DC32     G_u32SystemTime1ms

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_14:
   \        0x0   0x....'....        DC32     G_u32SystemTime1s

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_15:
   \        0x0   0xE000'E014        DC32     0xe000e014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_16:
   \        0x0   0xE000'E018        DC32     0xe000e018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_17:
   \        0x0   0xE000'E010        DC32     0xe000e010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_18:
   \        0x0   0x....'....        DC32     `SystemSleep::u32PreviousSystemTick`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_19:
   \        0x0   0x....'....        DC32     Bsp_u32TimingViolationsCounter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_20:
   \        0x0   0x....'....        DC32     G_u32SystemFlags

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_21:
   \        0x0   0x....'....        DC32     G_u32DebugFlags

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_22:
   \        0x0   0x....'....        DC32     `SystemSleep::au8TickWarningMessage`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_23:
   \        0x0   0x400E'0470        DC32     0x400e0470

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_24:
   \        0x0   0xE000'ED10        DC32     0xe000ed10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_25:
   \        0x0   0x1FFF'0500        DC32     0x1fff0500

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_26:
   \        0x0   0x400E'1254        DC32     0x400e1254

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_27:
   \        0x0   0xA500'0001        DC32     0xa5000001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_28:
   \        0x0   0x400E'1250        DC32     0x400e1250

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_29:
   \        0x0   0x8403'0007        DC32     0x84030007

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_30:
   \        0x0   0x400E'0C00        DC32     0x400e0c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_31:
   \        0x0   0x7BFC'FFF8        DC32     0x7bfcfff8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_32:
   \        0x0   0x400E'0C04        DC32     0x400e0c04

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_33:
   \        0x0   0xBF55'D7F9        DC32     0xbf55d7f9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_34:
   \        0x0   0x400E'0C10        DC32     0x400e0c10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_35:
   \        0x0   0x40AA'2806        DC32     0x40aa2806

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_36:
   \        0x0   0x400E'0C14        DC32     0x400e0c14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_37:
   \        0x0   0x400E'0C20        DC32     0x400e0c20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_38:
   \        0x0   0x400E'0C24        DC32     0x400e0c24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_39:
   \        0x0   0x8801'0000        DC32     0x88010000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_40:
   \        0x0   0x400E'0C30        DC32     0x400e0c30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_41:
   \        0x0   0x400E'0C34        DC32     0x400e0c34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_42:
   \        0x0   0x0400'0600        DC32     0x4000600

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_43:
   \        0x0   0x400E'0C50        DC32     0x400e0c50

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_44:
   \        0x0   0xFBFF'F9FF        DC32     0xfbfff9ff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_45:
   \        0x0   0x400E'0C54        DC32     0x400e0c54

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_46:
   \        0x0   0x400E'0C60        DC32     0x400e0c60

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_47:
   \        0x0   0x400E'0C64        DC32     0x400e0c64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_48:
   \        0x0   0x400E'0C70        DC32     0x400e0c70

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_49:
   \        0x0   0x400E'0C80        DC32     0x400e0c80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_50:
   \        0x0   0x400E'0C84        DC32     0x400e0c84

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_51:
   \        0x0   0x400E'0C8C        DC32     0x400e0c8c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_52:
   \        0x0   0xB401'0000        DC32     0xb4010000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_53:
   \        0x0   0x400E'0CA0        DC32     0x400e0ca0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_54:
   \        0x0   0x400E'0CA4        DC32     0x400e0ca4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_55:
   \        0x0   0x01BF'FF57        DC32     0x1bfff57

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_56:
   \        0x0   0x400E'0E00        DC32     0x400e0e00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_57:
   \        0x0   0x0040'0058        DC32     0x400058

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_58:
   \        0x0   0x400E'0E04        DC32     0x400e0e04

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_59:
   \        0x0   0x01BF'FFE0        DC32     0x1bfffe0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_60:
   \        0x0   0x400E'0E10        DC32     0x400e0e10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_61:
   \        0x0   0x0040'001F        DC32     0x40001f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_62:
   \        0x0   0x400E'0E14        DC32     0x400e0e14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_63:
   \        0x0   0x400E'0E20        DC32     0x400e0e20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_64:
   \        0x0   0x400E'0E24        DC32     0x400e0e24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_65:
   \        0x0   0x01BF'FE00        DC32     0x1bffe00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_66:
   \        0x0   0x400E'0E30        DC32     0x400e0e30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_67:
   \        0x0   0x400E'0E34        DC32     0x400e0e34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_68:
   \        0x0   0x400E'0E50        DC32     0x400e0e50

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_69:
   \        0x0   0x400E'0E54        DC32     0x400e0e54

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_70:
   \        0x0   0x01FF'FE5F        DC32     0x1fffe5f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_71:
   \        0x0   0x400E'0E60        DC32     0x400e0e60

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_72:
   \        0x0   0x400E'0E64        DC32     0x400e0e64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_73:
   \        0x0   0x0040'0018        DC32     0x400018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_74:
   \        0x0   0x400E'0E70        DC32     0x400e0e70

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_75:
   \        0x0   0x400E'0E80        DC32     0x400e0e80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_76:
   \        0x0   0x400E'0E84        DC32     0x400e0e84

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_77:
   \        0x0   0x400E'0E8C        DC32     0x400e0e8c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_78:
   \        0x0   0x001F'FFE0        DC32     0x1fffe0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_79:
   \        0x0   0x400E'0EA0        DC32     0x400e0ea0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_80:
   \        0x0   0x400E'0EA4        DC32     0x400e0ea4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_81:
   \        0x0   0x4008'C000        DC32     0x4008c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_82:
   \        0x0   0x4008'C020        DC32     0x4008c020

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_83:
   \        0x0   0x4008'C200        DC32     0x4008c200

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_84:
   \        0x0   0x4008'C20C        DC32     0x4008c20c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_85:
   \        0x0   0x4008'C210        DC32     0x4008c210

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_86:
   \        0x0   0x4008'C204        DC32     0x4008c204

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_87:
   \        0x0   0x4008'C208        DC32     0x4008c208

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_88:
   \        0x0   0x4008'C220        DC32     0x4008c220

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_89:
   \        0x0   0x4008'C22C        DC32     0x4008c22c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_90:
   \        0x0   0x4008'C230        DC32     0x4008c230

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_91:
   \        0x0   0x4008'C224        DC32     0x4008c224

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_92:
   \        0x0   0x4008'C228        DC32     0x4008c228

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_93:
   \        0x0   0x005B'8D80        DC32     0x5b8d80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_94:
   \        0x0   0x4008'C00C        DC32     0x4008c00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_95:
   \        0x0   0x4008'C004        DC32     0x4008c004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_96:
   \        0x0   0x4008'C008        DC32     0x4008c008
    407          
    408          
    409          
    410          /*--------------------------------------------------------------------------------------------------------------------*/
    411          /* End of File */
    412          /*--------------------------------------------------------------------------------------------------------------------*/
    413          
    414          
    415          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   ClockSetup
       8   GpioSetup
         8   -> PWMSetupAudio
       0   PWMAudioOff
       0   PWMAudioOn
       4   PWMAudioSetFrequency
       0   PWMSetupAudio
       0   RealTimeClockSetup
       0   SysTickSetup
      16   SystemSleep
        16   -> DebugLineFeed
        16   -> DebugPrintNumber
        16   -> DebugPrintf
       0   WatchDogSetup


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_10
       4  ??DataTable8_11
       4  ??DataTable8_12
       4  ??DataTable8_13
       4  ??DataTable8_14
       4  ??DataTable8_15
       4  ??DataTable8_16
       4  ??DataTable8_17
       4  ??DataTable8_18
       4  ??DataTable8_19
       4  ??DataTable8_2
       4  ??DataTable8_20
       4  ??DataTable8_21
       4  ??DataTable8_22
       4  ??DataTable8_23
       4  ??DataTable8_24
       4  ??DataTable8_25
       4  ??DataTable8_26
       4  ??DataTable8_27
       4  ??DataTable8_28
       4  ??DataTable8_29
       4  ??DataTable8_3
       4  ??DataTable8_30
       4  ??DataTable8_31
       4  ??DataTable8_32
       4  ??DataTable8_33
       4  ??DataTable8_34
       4  ??DataTable8_35
       4  ??DataTable8_36
       4  ??DataTable8_37
       4  ??DataTable8_38
       4  ??DataTable8_39
       4  ??DataTable8_4
       4  ??DataTable8_40
       4  ??DataTable8_41
       4  ??DataTable8_42
       4  ??DataTable8_43
       4  ??DataTable8_44
       4  ??DataTable8_45
       4  ??DataTable8_46
       4  ??DataTable8_47
       4  ??DataTable8_48
       4  ??DataTable8_49
       4  ??DataTable8_5
       4  ??DataTable8_50
       4  ??DataTable8_51
       4  ??DataTable8_52
       4  ??DataTable8_53
       4  ??DataTable8_54
       4  ??DataTable8_55
       4  ??DataTable8_56
       4  ??DataTable8_57
       4  ??DataTable8_58
       4  ??DataTable8_59
       4  ??DataTable8_6
       4  ??DataTable8_60
       4  ??DataTable8_61
       4  ??DataTable8_62
       4  ??DataTable8_63
       4  ??DataTable8_64
       4  ??DataTable8_65
       4  ??DataTable8_66
       4  ??DataTable8_67
       4  ??DataTable8_68
       4  ??DataTable8_69
       4  ??DataTable8_7
       4  ??DataTable8_70
       4  ??DataTable8_71
       4  ??DataTable8_72
       4  ??DataTable8_73
       4  ??DataTable8_74
       4  ??DataTable8_75
       4  ??DataTable8_76
       4  ??DataTable8_77
       4  ??DataTable8_78
       4  ??DataTable8_79
       4  ??DataTable8_8
       4  ??DataTable8_80
       4  ??DataTable8_81
       4  ??DataTable8_82
       4  ??DataTable8_83
       4  ??DataTable8_84
       4  ??DataTable8_85
       4  ??DataTable8_86
       4  ??DataTable8_87
       4  ??DataTable8_88
       4  ??DataTable8_89
       4  ??DataTable8_9
       4  ??DataTable8_90
       4  ??DataTable8_91
       4  ??DataTable8_92
       4  ??DataTable8_93
       4  ??DataTable8_94
       4  ??DataTable8_95
       4  ??DataTable8_96
       4  Bsp_u32TimingViolationsCounter
     106  ClockSetup
       4  G_u32SystemTime1ms
       4  G_u32SystemTime1s
     234  GpioSetup
       6  PWMAudioOff
       6  PWMAudioOn
      94  PWMAudioSetFrequency
      76  PWMSetupAudio
       2  RealTimeClockSetup
      34  SysTickSetup
     104  SystemSleep
      14  WatchDogSetup
      32  au8TickWarningMessage
       4  u32PreviousSystemTick

 
    16 bytes in section .bss
    32 bytes in section .data
 1 064 bytes in section .text
 
 1 064 bytes of CODE memory
    48 bytes of DATA memory

Errors: none
Warnings: none
